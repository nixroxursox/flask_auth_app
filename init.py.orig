import sqlalchemy
from sqlalchemy import *
from sqlalchemy import create_engine
from sqlalchemy import Table, Column, Integer, String, MetaData, ForeignKey
import nacl.pwhash
from sqlalchemy.orm import mapper

db_string = "postgresql+pg8000://postgres:passw0rd@localhost:5432/postgres"
db = sqlalchemy.create_engine(db_string)


def create_app():
    app = Flask(__name__)

    app.config["SECRET_KEY"] = "9OLWxND4o83j4K4iuopO"
    app.config[
        "SQLALCHEMY_DATABASE_URI"
    ] = "postgresql+psycopg2://postgres:passw0rd@localhost:5432/postgres"

    db.init_app(app)

    login_manager = LoginManager()
    login_manager.login_view = "auth.login"
    login_manager.init_app(app)

    from .models import Users


password = b"passw0rd"
pin = b"9493910663"


db = create_engine(db_string)
metadata = MetaData()

print(nacl.pwhash.argon2id.str(password))
print(nacl.pwhash.argon2id.str(pin))

users = Table(
    "users",
    metadata,
    Column("id", Integer, Sequence("user_id_seq"), primary_key=True),
    Column("name", String(255)),
    Column("PIN", String(144)),
    Column("password", String(144)),
    Column("public_key", String(2000)),
    Column("created", DateTime, nullable=False, default=func.now()),
    Column("Modified", DateTime, nullable=False, onupdate=func.utc_timestamp()),
)


class User(object):
    def __init__(self, name, PIN, password, public_key):
        self.name = name
        self.PIN = PIN
        self.password = password
        self.public_key = public_key


mapper(User, users)


metadata.create_all(db)
